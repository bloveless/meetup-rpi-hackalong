# Client port of 4222 on all interfaces
port: 4222

# HTTP monitoring port
monitor_port: 8222

# This is for clustering multiple servers together.
cluster {
  # It is recommended to set a cluster name
  name: "my_cluster"

  # Route connections to be received on any interface on port 6222
  port: 6222

  # Routes are protected, so need to use them with --routes flag
  # e.g. --routes=nats-route://ruser:T0pS3cr3t@otherdockerhost:6222
  authorization {
    user: ruser
    password: T0pS3cr3t
    timeout: 2
  }

  # Routes are actively solicited and connected to from this server.
  # This Docker image has none by default, but you can pass a
  # flag to the nats-server docker image to create one to an existing server.
  routes = []
}

websocket {
  # Specify a host and port to listen for websocket connections
  #
  listen: "0.0.0.0:8433"

  # It can also be configured with individual parameters,
  # namely host and port.
  #
  # host: "hostname"
  # port: 443

  # This will optionally specify what host:port for websocket
  # connections to be advertised in the cluster.
  #
  # advertise: "host:port"

  # TLS configuration is required by default
  #

  # For test environments, you can disable the need for TLS
  # by explicitly setting this option to `true`
  #
  no_tls: true
}
